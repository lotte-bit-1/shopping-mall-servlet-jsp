<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="product">
    <resultMap id="BaseResultMap" type="product">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="categoryId" jdbcType="BIGINT" property="categoryId"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="price" jdbcType="BIGINT" property="price"/>
        <result column="quantity" jdbcType="BIGINT" property="quantity"/>
        <result column="created_at" jdbcType="TIMESTAMP" property="createdAt"/>
        <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt"/>
    </resultMap>
    <resultMap id="ListResultMap" type="productListItem">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="price" jdbcType="BIGINT" property="price"/>
        <result column="is_liked" jdbcType="BIGINT" property="isLiked"/>
        <result column="url" jdbcType="VARCHAR" property="url"/>
        <result column="created_at" jdbcType="TIMESTAMP" property="createdAt"/>
        <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt"/>
    </resultMap>
    <resultMap id="singleProduct" type="productItemQuantity">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="price" jdbcType="BIGINT" property="price"/>
        <result column="url" jdbcType="VARCHAR" property="url"/>
        <result column="quantity" jdbcType="BIGINT" property="quantity"/>
        <result column="created_at" jdbcType="TIMESTAMP" property="createdAt"/>
        <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt"/>
    </resultMap>
  <resultMap id="productOfLike" type="productOfLike">
    <id column="id" jdbcType="BIGINT" property="id"/>
    <result column="name" jdbcType="VARCHAR" property="name"/>
    <result column="price" jdbcType="BIGINT" property="price"/>
    <result column="url" jdbcType="VARCHAR" property="url"/>
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt"/>
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt"/>
  </resultMap>

  <select id="gettotalpage" resultType="int" parameterType="int">
    SELECT CEIL(COUNT(*) / #{perPage})
    FROM product;
  </select>

  <select id="selectProductListItemOfLike" parameterType="Long" resultMap="productOfLike">
    SELECT p.id, p.name, p.price, i.url
    FROM product p
    LEFT JOIN product_image i
    ON p.id = i.product_id
    WHERE p.id in
    <foreach collection="list" item="id" open="(" separator="," close=")">
      #{id}
    </foreach>
    AND is_thumbnail = true
  </select>

  <select id="select" parameterType="app.dto.product.ProductDetailParameter"
    resultType="app.dto.product.ProductDetail">
    SELECT p.name              name,
           p.price             price,
           p.category_id       categoryId,
           p.description       description,
           pi.url              url,
           p.quantity          quantity,
           CASE
             WHEN l.product_id IS NOT NULL THEN true
             ELSE false END AS isLiked
    FROM product p
           LEFT JOIN likes l ON p.id = l.product_id
           LEFT JOIN product_image pi ON p.id = pi.product_id
    WHERE member_id = #{memberId}
      AND p.id = #{productId}
      AND pi.is_thumbnail = false
  </select>

  <select id="selectone" parameterType="Long" resultMap="singleProduct">
    SELECT p.id, p.name, p.quantity, p.price, i.url
    FROM product p
    LEFT JOIN product_image i
    ON p.id = i.product_id
    WHERE p.id in
    <foreach collection="list" item="id" open="(" separator="," close=")">
      #{id}
      </foreach>
      AND is_thumbnail = true
    </select>
    <select id="selectall" resultType="product">
      SELECT *
      FROM product
    </select>
    <select id="sortbypricedesc" parameterType="hashMap" resultMap="ListResultMap">
      SELECT p.name,
             p.price,
             pi.url,
             CASE WHEN l.product_id IS NOT NULL THEN true ELSE false END AS is_liked
      FROM product p
             LEFT JOIN likes l ON l.product_id = p.id AND l.member_id = #{userId}
             left join product_image pi on p.id = pi.product_id
      ORDER BY p.price desc
        LIMIT #{current}, #{perPage}
    </select>
    <select id="sortbydate" resultMap="ListResultMap">
      SELECT p.name,
             p.price,
             pi.url,
             CASE WHEN l.product_id IS NOT NULL THEN true ELSE false END AS is_liked
      FROM product p
             LEFT JOIN likes l ON l.product_id = p.id AND l.member_id = #{userId}
             left join product_image pi on p.id = pi.product_id
      ORDER BY p.created_at desc
        LIMIT #{current}, #{perPage}
    </select>
    <select id="sortbyprice" resultMap="ListResultMap">
      SELECT p.name,
             p.price,
             pi.url,
             CASE WHEN l.product_id IS NOT NULL THEN true ELSE false END AS is_liked
      FROM product p
             LEFT JOIN likes l ON l.product_id = p.id AND l.member_id = #{userId}
             left join product_image pi on p.id = pi.product_id
      ORDER BY p.price
        LIMIT #{current}, #{perPage}
    </select>
    <insert id="insert" parameterType="product">
        INSERT INTO product (category_id, name, description, price, quantity, code)
        VALUES (#{categoryId}, #{name}, #{description}, #{price}, #{quantity}, #{code})
    </insert>
    <update id="update" parameterType="product">
        UPDATE product
        SET category_id = #{categoryId},
            name        = #{name},
            description = #{description},
            price       = #{price},
            quantity    = #{quantity},
            code        = #{code}
        WHERE id = #{id}
    </update>
    <delete id="delete" parameterType="Long">
        DELETE
        FROM product
        WHERE id = #{id}
    </delete>

  <select id="get-category" parameterType="Long" resultType="category">
    SELECT c1.id AS category_id, c1.parent_id, c1.name, c1.level
    FROM category c1
    WHERE c1.id = #{id}
    UNION
    SELECT distinct c2.id AS category_id, c2.parent_id, c2.name, c2.level
    FROM category c1
           JOIN category c2 ON c2.id = c1.parent_id
    WHERE c1.id = #{id}
    UNION
    SELECT c3.id AS category_id, c3.parent_id, c3.name, c3.level
    FROM category c1
           JOIN category c2 ON c2.id = c1.parent_id
           JOIN category c3 ON c3.id = c2.parent_id
    WHERE c1.id = #{id}
    ORDER BY level
  </select>
</mapper>






